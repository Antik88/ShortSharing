name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: ${{ env.WORKING_DIR }}

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Debug
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Debug

    - name: Sonar Scan
      uses: highbyte/sonarscan-dotnet@v2.3.0
      with:
        sonarProjectKey: Antik88_ShortSharing
        sonarProjectName: ShortSharing
        sonarOrganization: antik88
        dotnetBuildArguments: ${{ env.WORKING_DIR }} 
        dotnetTestArguments: --configuration Release --verbosity normal --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" /d:sonar.coverage.exclusions="${{ vars.EXCLUDE_FROM_COVERAGE }}" /d:sonar.cpd.exclusions="${{ vars.EXCLUDE_FROM_CPD }}"
    env: 
        EXCLUDE_FROM_COVERAGE: ${{ vars.EXCLUDE_FROM_COVERAGE }}
        EXCLUDE_FROM_CPD: ${{ vars.EXCLUDE_FROM_CPD }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        WORKING_DIR: "Catalog.Service"