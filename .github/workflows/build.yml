name: SonarCloud 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:    
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install .NET Core 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release

  analyze:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core 7.0 for SonarCloud Analysis
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x

    - name: Sonar Scan
      uses: highbyte/sonarscan-dotnet@v2.3.0
      with:
        sonarProjectKey: Antik88_ShortSharing
        sonarProjectName: ShortSharing
        sonarOrganization: antik88
        dotnetBuildArguments: ${{ env.WORKING_DIRECTORY }} --configuration Release
        dotnetTestArguments: ${{ env.WORKING_DIRECTORY }} --no-build --configuration Release --verbosity normal --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" /d:sonar.coverage.exclusions="${{env.EXCLUDE_FROM_COVERAGE}}" 
    env: 
        EXCLUDE_FROM_COVERAGE: "**/Program.cs, **/Extensions/*, **/Exceptions/**, **/DI/*, **/Validators/*, **/Enums/**/*, **/MappingConfigurations/*, **/ViewModels/**, **/Controllers/*, **/Utilities/**, **/Models/**"
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        EXCLUDE_FROM_SONAR: "**/ViewModels/**, **/Dockerfile"
