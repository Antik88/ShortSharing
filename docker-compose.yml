version: '3.4'

networks:
  shortsharing:
    driver: bridge

services:
  rent.service.db:
    container_name: rent.service.db
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - 8002:1433
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=password@123456
    networks:
      - shortsharing

  rent.service:
    container_name: rent.service
    image: ${DOCKER_REGISTRY-}rentserviceapi
    build:
      context: ./Rent.Service
      dockerfile: Dockerfile
    depends_on: 
      - rent.service.db   
      - rabbitmq
    environment:
      - ConnectionStrings__CatalogueBaseUrl=http://catalog.service:8005/api/Thing/
      - ConnectionStrings__DefaultConnection=Data Source=rent.service.db;Initial Catalog=rent_service_api;User ID=sa;Password=password@123456;TrustServerCertificate=true;
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__VirtualHost=/
      - RabbitMQ__Username=rmuser
      - RabbitMQ__Password=rmpassword
    networks:
      - shortsharing

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 5673:5672
      - 15673:15672
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
    networks:
      - shortsharing

  email.service:
    container_name: email.service
    image: ${DOCKER_REGISTRY-}emailservice
    build:
      context: ./Email.Service  
      dockerfile: Dockerfile
    depends_on: 
      - rabbitmq
    # - mongodb 
    environment:
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__VirtualHost=/
      - RabbitMQ__Username=rmuser
      - RabbitMQ__Password=rmpassword
      - DbConnection=mongodb://user:pass@mongodb/ShortSharing
    networks:
      - shortsharing

  catalog.service:
    container_name: catalog.service
    image: ${DOCKER_REGISTRY-}catalogserviceapi
    build:
      context: ./Catalog.Service 
      dockerfile: Dockerfile
    depends_on:
      - catalog.db 
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=postgres;Server=catalog.db;Port=5432;Database=RentCatalogDb; IntegratedSecurity=true;Pooling=true;
    networks:
      - shortsharing

  catalog.db:
    image: postgres:latest
    container_name: catalog.db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=RentCatalogDb
    ports:
      - "5432:5432"
    networks:
      - shortsharing

  user.service:
    container_name: user.service
    image: ${DOCKER_REGISTRY-}userserviceapi
    build:
      context: ./User.Service 
      dockerfile: Dockerfile
    depends_on:
      - user.service.db
    environment:
      - ConnectionStrings__DefaultConnection=Data Source=user.service.db;Initial Catalog=user_service_api;User ID=sa;Password=password@123456;TrustServerCertificate=true;
    networks:
      - shortsharing

  user.service.db:
    container_name: user.service.db
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - 8088:1433
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=password@123456
    networks:
      - shortsharing

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password 
      PGADMIN_LISTEN_PORT: 8001
    ports:
      - "8001:8001"
    depends_on:
      - user.service.db
    networks:
      - shortsharing

  gateway:
    container_name: gateway 
    image: ${DOCKER_REGISTRY-}gateway
    build:
      context: ./Gateway
      dockerfile: Dockerfile
    depends_on:
      - rent.service
      - catalog.service
      - user.service
    networks:
      - shortsharing